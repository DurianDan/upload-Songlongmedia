#!/usr/bin/python3 
from selenium import webdriver
import json

below_des = '''{}

{}
link s·∫£n ph·∫©m: {}

{}

---------------------------------
H·ªÜ TH·ªêNG C·ª¨A H√ÄNG - SONGLONGMEDIA
Shop 1: S·ªë 98.F ph·ªë Nguy·ªÖn Th√°i H·ªçc, Ba ƒê√¨nh, H√† N·ªôi.
Shop 2: 12 ng√µ 860 ph·ªë Minh Khai, Hai B√† Tr∆∞ng, H√† N·ªôi.
Shop 3: 12 Ng√µ 282 Nguy·ªÖn Kho√°i, Hai B√† Tr∆∞ng, H√† N·ªôi. 
----------------------
üìå #Website Songlongmedia
https://songlongmedia.com

üìå Trang #Facebook Songlongmedia
https://www.facebook.com/songlongmedia

üìå Tham gia c·ªông ƒë·ªìng ng∆∞·ªùi y√™u tai nghe ƒë·ªÉ giao l∆∞u, trao ƒë·ªïi kinh nghi·ªám
https://bit.ly/3edmis9

üìå K√™nh gi·∫£i tr√≠ #Tiktok
https://www.tiktok.com/@songlongmedia

üìå Gian h√†ng #Shopee 
https://shopee.vn/songlongmediashop

üìå Phone, Zalo, iMess, Viber
094.1144.666

üëç ƒêƒÇNG K√ç K√äNH ƒê·ªÇ ·ª¶NG H·ªò TEAM REVIEW NHA!'''
def get_texts(full_link:str,shorten_link:str,is60s = True,reset = True):
    '''function t·∫°o ra t√™n video,m·ª•c mi√™u t·∫£, v√† Tags'''
    driver = webdriver.Firefox()
    driver.get(full_link)#m·ªü link s·∫£n ph·∫©m
    xemthem = driver.find_element_by_xpath("/html/body/div[4]/div/div/div/div[1]/div[2]/div[2]/div[2]")
    xemthem.click()#·∫•n v√†o ch·ªØ "xem th√™m"

    #1 t·∫°o t√™n video (video_name)
    if not is60s:
        if reset:
            video_name = "H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng v√† reset {}"
        else:
            video_name = "H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng {}"
    else:
        video_name = "Unboxing 60s - {} - songlongmedia"
    product_name =driver.find_element_by_xpath("/html/body/div[4]/div/div/div/div[1]/div[2]/div[1]/h1").text #ƒë√¢y l√† t√™n s·∫£n ph·∫©m ·ªü d·∫°ng string (in ƒë∆∞·ª£c)
    video_name = video_name.format(product_name)

    #2 t·∫°o tags (video_tags)
    video_tags = ""
    video_des_tags = ""
    product_summery_html = driver.find_element_by_xpath("/html/body/div[4]/div/div/div/div[1]/div[2]/div[2]/div[1]") #ƒë√¢y l√† m·ª•c mi√™u t·∫£ s·∫£n ph·∫©m ·ªü d·∫°ng html (ko in ƒë∆∞·ª£c)
    tags = set()#ƒë√¢y l√† tags (c√°ch nhau b·ªüi d·∫•u ph·∫©y, ·ªü m·ª•c tags ri√™ng)
    for i in product_summery_html.find_elements_by_xpath(".//*"):#t√¨m t·∫•t c·∫£ ch·ªØ t√¥ ƒë·∫≠m trong m·ª•c mi√™u t·∫£
        if i.value_of_css_property("font-weight") == "700":#sau ƒë√≥
            tag = i.text
            if ">" in tag:
                tag = tag.replace(">"," l·ªõn h∆°n ")
            if "<" in tag:
                tag = tag.replace("<"," nh·ªè h∆°n ")
            tags.add(tag.strip("‚úî ,.:\\/:;\'\"?!@#$\%^&*\(\)-_=+`~")) #th√™m v√†o tags (lo·∫°i b·ªè c√°c k√Ω hi·ªáu th·ª´a)
    if is60s:
        video_tags= "Songlongmedia Unboxing 60s, "
        video_des_tags = "#songlongmedia #unboxing60s"
    else:
        video_tags= "Songlongmedia,H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng,c√°ch d√πng,"
        video_des_tags = "#songlongmedia #huongdansudung #cachdung #hdsd"
    for i in tags:
        video_tags +=(i+",")

    #3 t·∫°o m·ª•c mi√™u t·∫£ s·∫£n ph·∫©m (video_description)
    #3.1 t·∫°o tags trong m·ª•c mi√™u t·∫£ (video_des_tags)
    tags_in_des = set() #ƒë√¢y l√† tags trong ph·∫ßn mi√™u t·∫£ (c√°ch nhau b·ªüi d·∫•u "#")
    for i in tags:
        for j in i.split():
            if "<" in j: #youtube kh√¥ng cho ph√©p c√≥ d·∫•u "<",">" ·ªü m·ª•c mi√™u t·∫£
                j.replace("<"," nh·ªè h∆°n ")#n√™n c·∫ßn thay th·∫ø
            if ">" in j:
                j.replace('>',' l·ªõn h∆°n ')
            tags_in_des.add(j.strip("‚úî ,.:\\/:;\'\"?!@#$\%^&*\(\)-_=+`~"))
    for i in tags_in_des:
        video_des_tags += (" #"+i)
    #3.2 t·∫°o m·ª•c mi√™u t·∫£ (video_description)
    Angleinit = False
    video_description= below_des.format(video_des_tags,product_name,shorten_link,product_summery_html.text.replace("\n","").replace("‚úî","\n‚úî"))
    angles = ["<",">"]
    angles_alt = ["nh·ªè h∆°n","l·ªõn h∆°n"]
    for i in range(2):
        if angles[i] in video_des_tags:
            Angleinit = True
            if Angleinit:
                video_description = video_description.replace(angles[i],angles_alt[i])
    driver.quit()
    return video_name,video_description,video_tags

#l∆∞u t·∫•t c·∫£ m√¥ t·∫£ video v√†o folder "json_description"
def save_json(MP4_name:str,full_link:str,shorten_link:str,MP4_file_name:str,is60s = True,reset = True):
    name,des,tags = get_texts(full_link,shorten_link,is60s = is60s,reset = reset)
    video_dict = {"video_name":name,"video_des":des,"video_tags":tags,"MP4_file_name":MP4_file_name}
    j = json.dumps(video_dict)
    with open("/home/duriandan/learning/personal project/upload Songlongmedia/json_description/{}.json".format(MP4_name),"w") as video_json:
        video_json.write(j)
        video_json.close()

